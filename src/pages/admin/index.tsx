import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../../utils/trpc";
import { useEffect } from "react";

const Admin: NextPage = () => {
  const { data: sessionData } = useSession();
  let name: string | null | undefined

  // Triggers a redirect to sign in if there is no session.
  useEffect(() => {
    /**
     * NOTE: sessionData will be undefined until it recieves a server response.
     * so we check if the loaded session is null 
     */
    if(sessionData === null) {
      signIn();
    } 
  }, [sessionData])
  
  return (
    <>
      <Head>
        <title>Old Lang Signs | Admin</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            {`Hi, ${sessionData?.user?.name || 'Admin'}`}
          </h1>
          <div className="flex flex-col items-center gap-2">
            <p className='text-white'>Do admin stuff</p>
            <p className='text-white'>Change Password.</p>
            <button
              className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
              onClick={() => signOut()}
            >
              Sign out
            </button>
          </div>
        </div>
      </main>
    </>
  );
};

export default Admin;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
